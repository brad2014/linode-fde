#!/bin/bash
#
#  Start with linode does not exist
#

set -e

. functions.sh

id=$(liget | jq -r '.data|map({(.label):.})|add|.["'$LI_LABEL'"]?.id?')

echo $id
if [ "$id" = 'null' ]; then
  echo "Linode $LI_LABEL does not yet exist."
else
  echo "Linode $LI_LABEL exists with id $id"
  read -p "Destroying linode. ok? [n/y] " confirm
  if [ "$confirm" != 'y' ]; then
    echo 'Aborted'
    exit 1
  fi
  lidelete $id | jq
fi

echo "Creating Linode $LI_LABEL"
lipost '' '{
    "watchdog_enabled": false,
    "region": "'$LI_REGION'",
    "type": "'$LI_TYPE'",
    "label": "'$LI_LABEL'"
  }' > spec/linode.spec

liwait spec/linode.spec offline

id=$(jq -r .id < spec/linode.spec)
ip=$(jq -r .ipv4[0] < spec/linode.spec)
echo "New Linode $LI_LABEL is $id at $ip"

# lirdns $ip $LI_LABEL  # doesn't work yet


max_disk_size=$(jq -r .specs.disk < spec/linode.spec)
install_disk_size=100 # MB
os_disk_size=$(($max_disk_size - $install_disk_size))

echo "Create install disk ($install_disk_size Mb) for linode $id"
lipost "$id/disks" '{ "label": "install", "size": '$install_disk_size', "filesystem": "raw" }' > spec/disk.install.spec
liwait spec/disk.install.spec ready $id/disks/

echo "Create OS disk ($os_disk_size Mb) for linode $id"
lipost "$id/disks" '{ "label": "OS", "size": '$os_disk_size', "filesystem": "raw" }' > spec/disk.os.spec
liwait spec/disk.os.spec ready $id/disks/

install_disk_id=$(jq -r .id < spec/disk.install.spec)
os_disk_id=$(jq -r .id < spec/disk.os.spec)

echo "Create install configuration."
lipost "$id/configs" '{
    "label": "Install",
    "kernel": "linode/direct-disk",
    "devices": {
      "sda": { "disk_id": '$os_disk_id' },
      "sdb": { "disk_id": '$install_disk_id' }
    },
    "helpers": {
      "updatedb_disabled": false,
      "distro": false,
      "modules_dep": false,
      "network": false,
      "devtmpfs_automount": false
    },
    "root_device": "/dev/sdb"
  }' > spec/config.install.spec

echo "Create run configuration."
lipost "$id/configs" '{
    "label": "Run OS",
    "kernel": "linode/direct-disk",
    "devices": {
      "sda": { "disk_id": '$os_disk_id' }
    },
    "helpers": {
      "updatedb_disabled": false,
      "distro": false,
      "modules_dep": false,
      "network": false,
      "devtmpfs_automount": false
    },
    "root_device": "/dev/sda"
  }' > spec/config.run.spec


echo Booting into rescue mode, to initialize install disk.
lipost $id/rescue '{
    "devices": {
      "sda": { "disk_id": '$install_disk_id' }
    }
  }' > spec/rescue.spec
liwait spec/linode.spec running
